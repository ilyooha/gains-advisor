// <auto-generated />
using System;
using Infrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221111235412_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMove", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Moves", (string)null);
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Muscles", (string)null);
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscleActivationData", b =>
                {
                    b.Property<Guid>("MoveId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MuscleId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EfMuscleId")
                        .HasColumnType("uuid");

                    b.HasKey("MoveId", "MuscleId");

                    b.HasIndex("EfMuscleId");

                    b.HasIndex("MuscleId");

                    b.ToTable("MuscleActivationData", (string)null);
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscleConnection", b =>
                {
                    b.Property<Guid>("AncestorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DescendantId")
                        .HasColumnType("uuid");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.HasKey("AncestorId", "DescendantId");

                    b.HasIndex("DescendantId");

                    b.ToTable("MuscleConnections", (string)null);
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscleActivationData", b =>
                {
                    b.HasOne("Infrastructure.EfCore.Models.EfMuscle", null)
                        .WithMany("Moves")
                        .HasForeignKey("EfMuscleId");

                    b.HasOne("Infrastructure.EfCore.Models.EfMove", "Move")
                        .WithMany("ActivationData")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.EfCore.Models.EfMuscle", "Muscle")
                        .WithMany()
                        .HasForeignKey("MuscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");

                    b.Navigation("Muscle");
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscleConnection", b =>
                {
                    b.HasOne("Infrastructure.EfCore.Models.EfMuscle", "Ancestor")
                        .WithMany("Descendants")
                        .HasForeignKey("AncestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.EfCore.Models.EfMuscle", "Descendant")
                        .WithMany("Ancestors")
                        .HasForeignKey("DescendantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ancestor");

                    b.Navigation("Descendant");
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMove", b =>
                {
                    b.Navigation("ActivationData");
                });

            modelBuilder.Entity("Infrastructure.EfCore.Models.EfMuscle", b =>
                {
                    b.Navigation("Ancestors");

                    b.Navigation("Descendants");

                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
